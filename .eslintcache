[{"C:\\my-twitter-clone-react\\src\\index.js":"1","C:\\my-twitter-clone-react\\src\\reportWebVitals.js":"2","C:\\my-twitter-clone-react\\src\\components\\Home.jsx":"3","C:\\my-twitter-clone-react\\src\\utils\\apicalls.js":"4","C:\\my-twitter-clone-react\\src\\components\\HeaderDashboard.jsx":"5","C:\\my-twitter-clone-react\\src\\components\\posts\\MyPostList.jsx":"6","C:\\my-twitter-clone-react\\src\\components\\posts\\PostList.jsx":"7","C:\\my-twitter-clone-react\\src\\utils\\api.js":"8","C:\\my-twitter-clone-react\\src\\utils\\utils.js":"9","C:\\my-twitter-clone-react\\src\\config.js":"10","C:\\my-twitter-clone-react\\src\\components\\posts\\AddPost.jsx":"11","C:\\my-twitter-clone-react\\src\\components\\posts\\EditPost.jsx":"12","C:\\my-twitter-clone-react\\src\\components\\App.jsx":"13"},{"size":721,"mtime":1609003413609,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":974,"mtime":1609157076917,"results":"17","hashOfConfig":"15"},{"size":704,"mtime":1609096836568,"results":"18","hashOfConfig":"15"},{"size":1203,"mtime":1609158517269,"results":"19","hashOfConfig":"15"},{"size":5806,"mtime":1609156969062,"results":"20","hashOfConfig":"15"},{"size":2376,"mtime":1609153549121,"results":"21","hashOfConfig":"15"},{"size":233,"mtime":1609155392164,"results":"22","hashOfConfig":"15"},{"size":743,"mtime":1608925044965,"results":"23","hashOfConfig":"15"},{"size":145,"mtime":1609158391514,"results":"24","hashOfConfig":"15"},{"size":1359,"mtime":1609152533033,"results":"25","hashOfConfig":"15"},{"size":1377,"mtime":1609084999689,"results":"26","hashOfConfig":"15"},{"size":1807,"mtime":1609158468629,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1o72emv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\my-twitter-clone-react\\src\\index.js",[],["57","58"],"C:\\my-twitter-clone-react\\src\\reportWebVitals.js",[],"C:\\my-twitter-clone-react\\src\\components\\Home.jsx",[],"C:\\my-twitter-clone-react\\src\\utils\\apicalls.js",[],"C:\\my-twitter-clone-react\\src\\components\\HeaderDashboard.jsx",[],"C:\\my-twitter-clone-react\\src\\components\\posts\\MyPostList.jsx",["59"],"import React, { useState, useEffect } from 'react';\r\nimport classnames from 'classnames';\r\nimport '../../styles.css';\r\n\r\n\r\nimport { Row, Col, Card, CardTitle, Badge, CardBody,\r\nTable, Alert, Button, Nav, NavItem, NavLink, TabContent,\r\nTabPane, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\r\nimport { AiOutlineHeart, AiOutlineRetweet } from 'react-icons/ai';\r\nimport { BsChat, BsUpload } from \"react-icons/bs\";\r\n\r\nimport { getMyPosts, deletePost } from \"../../utils/apicalls.js\";\r\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\r\n\r\nimport AddPost from './AddPost';\r\nimport EditPost from './EditPost';\r\n\r\nexport default function MyPostList(props){\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [edit, setEdit] = useState(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [showDeleteModal, setShowDeleteModal] = useState(null);\r\n\r\n  const getPosts = () => {\r\n      getMyPosts(sessionStorage.getItem('email')).then((posts) => {\r\n          setPosts(posts);\r\n      });\r\n  }\r\n\r\n  const toggleTab = (tab) => {\r\n    if (activeTab !== tab)\r\n      setActiveTab(tab);\r\n  }\r\n\r\n  const handleUpdateMyPosts = () => {\r\n    getPosts();\r\n  }\r\n\r\n  const askForDelete = (post) => {\r\n    setShowDeleteModal(\r\n      <Modal isOpen=\"true\" className={props.className}>\r\n        <ModalHeader>Eliminar post</ModalHeader>\r\n        <ModalBody>\r\n          Se va a eliminar el post:<br/><small><strong>{post.message}</strong></small>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => deletePostSel(post)}>Eliminar</Button>{' '}\r\n          <Button color=\"secondary\" onClick={() => setShowDeleteModal(null)}>Cancelar</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  //Deleting selected post\r\n  const deletePostSel = (post) => {\r\n    deletePost(post._id)\r\n      .then((res) => checkDELETEPost(res));\r\n  }\r\n\r\n  //Check the response from server\r\n  const checkDELETEPost = (res) => {\r\n    //if ok, remove modal and reset edit component\r\n    if (res === \"OK\"){\r\n      setShowDeleteModal(null);\r\n      setEdit(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\r\n      handleUpdateMyPosts();\r\n    }else{\r\n      //TODO Show a modal when error from server\r\n    }\r\n  }\r\n\r\n  const handleShowEdit = (post) => {\r\n    setEdit(<EditPost post= {post} updateMyPosts = {handleUpdateMyPosts} />);\r\n  }\r\n\r\n  useEffect(() =>{\r\n    getPosts();\r\n  },[]);\r\n\r\n  return(\r\n    <div>\r\n      {showDeleteModal}\r\n      <Row>\r\n        <Col xs=\"7\">\r\n          <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Mis Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\r\n          <Table>\r\n            <tbody>\r\n              { posts.map((post, index) => {\r\n                return(<div>\r\n                  <div>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row><Col><strong><img src={post.image} /> {post.user}</strong></Col>\r\n                               <Col align=\"right\">\r\n                                  <Button outline onClick={() => handleShowEdit(post)}><FaEdit /></Button>\r\n                                  {' '}\r\n                                  <Button outline onClick={() => askForDelete(post)}><FaTrashAlt /></Button>\r\n                                </Col>\r\n                                </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              {post.message}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col align=\"left\" xs= \"8\">\r\n                              <Row>\r\n                                <Col xs=\"2\"><BsChat /></Col>\r\n                                <Col xs=\"2\"><AiOutlineRetweet /><small>{Math.floor((Math.random() * 10) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><AiOutlineHeart /><small>{Math.floor((Math.random() * 100) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><BsUpload/></Col>\r\n                              </Row>\r\n                            </Col>\r\n                            <Col align=\"right\">\r\n                              <small>{getDateInStrFormat(new Date(post.publicationdate))}</small>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n              </div>\r\n                </div>)\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col xs=\"5\">\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '1' })} onClick={() => toggleTab('1')}>\r\n                AÃ±adir\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '2' })} onClick={() => toggleTab('2')}>\r\n                Editar\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  <AddPost updateMyPosts = {handleUpdateMyPosts}/>\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  {edit}\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}","C:\\my-twitter-clone-react\\src\\components\\posts\\PostList.jsx",["60"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, CardTitle, Badge, CardBody, Table, Alert } from 'reactstrap';\r\nimport '../../styles.css';\r\n\r\nimport { AiOutlineHeart, AiOutlineRetweet } from 'react-icons/ai';\r\nimport { BsChat, BsUpload } from \"react-icons/bs\";\r\n\r\nimport { getAllPosts } from \"../../utils/apicalls.js\";\r\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\r\n\r\nexport default function PostList(){\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const getPosts = () => {\r\n    getAllPosts().then((posts) => {\r\n      setPosts(posts);\r\n    });\r\n  }\r\n\r\n  useEffect(() =>{\r\n    getPosts();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\r\n      <Table>\r\n        <tbody>\r\n          { posts.map((post, index) => {\r\n            return(\r\n              <div>\r\n                  <Row>\r\n                    <Col>\r\n                      <Card>\r\n                        <CardBody>\r\n                          <Row><Col><strong><img src={post.image} /> {post.user}</strong></Col></Row>\r\n                          <Row>\r\n                            <Col>\r\n                              {post.message}\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col align=\"left\" xs= \"5\">\r\n                              <Row>\r\n                                <Col xs=\"2\"><BsChat /></Col>\r\n                                <Col xs=\"2\"><AiOutlineRetweet /><small>{Math.floor((Math.random() * 10) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><AiOutlineHeart /><small>{Math.floor((Math.random() * 100) + 1)}</small></Col>\r\n                                <Col xs=\"2\"><BsUpload/></Col>\r\n                              </Row>\r\n                            </Col>\r\n                            <Col align=\"right\">\r\n                              <small>{getDateInStrFormat(new Date(post.publicationdate))}</small>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n              </div>)\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n}","C:\\my-twitter-clone-react\\src\\utils\\api.js",[],"C:\\my-twitter-clone-react\\src\\utils\\utils.js",[],"C:\\my-twitter-clone-react\\src\\config.js",[],"C:\\my-twitter-clone-react\\src\\components\\posts\\AddPost.jsx",[],"C:\\my-twitter-clone-react\\src\\components\\posts\\EditPost.jsx",[],"C:\\my-twitter-clone-react\\src\\components\\App.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":98,"column":45,"nodeType":"67","endLine":98,"endColumn":69},{"ruleId":"65","severity":1,"message":"66","line":37,"column":45,"nodeType":"67","endLine":37,"endColumn":69},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]